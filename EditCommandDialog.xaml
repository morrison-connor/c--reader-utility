<Window x:Class="RFID.Utility.EditCommandDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore"
        xmlns:cla="clr-namespace:RFID.Utility.IClass"
        Background="{x:Null}" WindowStartupLocation="CenterScreen" AllowsTransparency="True"
        Title="EditCommandDialog" ResizeMode="NoResize" WindowStyle="None" 
        mc:Ignorable="d" d:DesignHeight="360" d:DesignWidth="540" 
        SizeToContent="WidthAndHeight" Topmost="False">
    <Window.Resources>
        <cla:RadioButtonGenderConverter x:Key="radioButtonConverterKey" />
        <Image x:Key="IMG_Close" Source="IMG/close.png"/>
        <Image x:Key="IMG_Forward" Source="IMG/ic_keyboard_arrow_left_white_48dp.png"/>
        <Image x:Key="IMG_Next" Source="IMG/ic_keyboard_arrow_right_white_48dp.png"/>
        <Style x:Key="TextBlockStyle11" TargetType="TextBlock">
            <Setter Property="FontSize" Value="11"></Setter>
            <Setter Property="FontFamily" Value="微軟正黑體"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
        </Style>
        <Style x:Key="TextBlockStyle12" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="微軟正黑體"></Setter>
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
        </Style>
        <Style x:Key="TextBlockStyle14B" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="微軟正黑體"></Setter>
            <Setter Property="FontSize" Value="14"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="Foreground" Value="WhiteSmoke"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
        </Style>
        <Style x:Key="ButtonStyle12B" TargetType="Button">
            <Setter Property="Button.FontFamily" Value="微軟正黑體"></Setter>
            <Setter Property="Button.FontSize" Value="12"></Setter>
            <Setter Property="Button.FontStyle" Value="Normal"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="Height" Value="26"></Setter>
        </Style>
        <Style TargetType="Label">
            <Setter Property="FontFamily" Value="微軟正黑體"></Setter>
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="FontStyle" Value="Oblique"></Setter>
        </Style>

        <SolidColorBrush x:Key="TextBackColor" Color="White"/>
        <SolidColorBrush x:Key="TextColor" Color="#FF444444"/>
        <SolidColorBrush x:Key="BorderColor" Color="#FF838383"/>
        <SolidColorBrush x:Key="NormalBrush" Color="NavajoWhite"/>
        <SolidColorBrush x:Key="PressedBrush" Color="#FFCA79"/>
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="Tan" />

        <!--Default styled textbox-->
        <Style x:Key="TextBoxDefaultStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Height" Value="26"/>
            <Setter Property="ForceCursor" Value="False"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="微軟正黑體"/>
            <Setter Property="CharacterCasing" Value="Upper"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="3,0,3,0"/>
            <Setter Property="Margin" Value="2,0,2,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border Background="{StaticResource TextBackColor}" BorderBrush="{StaticResource BorderColor}" x:Name="Bd" BorderThickness="1">
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                            </Border>
                            <Label HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,0,-4" FontSize="9" Opacity=".6">(hex)</Label>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Normal styled textbox-->
        <Style x:Key="TextBoxNormalStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Height" Value="26"/>
            <Setter Property="ForceCursor" Value="False"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="微軟正黑體"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="3,0,3,0"/>
            <Setter Property="Margin" Value="2,0,2,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid >
                            <Border Background="{StaticResource TextBackColor}" BorderBrush="{StaticResource BorderColor}" x:Name="Bd" BorderThickness="1">
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                            </Border>
                            <Image Name="OKImage" Width="24" Height="24" Margin="0,0,4,0" Source="IMG/ok.png" HorizontalAlignment="Right"></Image>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Error-style textbox-->
        <Style x:Key="TextBoxErrorStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Height" Value="26"/>
            <Setter Property="ForceCursor" Value="False"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="微軟正黑體"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="3,0,3,0"/>
            <Setter Property="Margin" Value="2,0,2,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid Name="test">
                            <Border Background="{StaticResource TextBackColor}" BorderBrush="OrangeRed" x:Name="Bd" BorderThickness="1">
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                            </Border>
                            <Image Name="ErrorImage" Width="24" Height="24" Margin="0,0,4,0" Source="IMG/error.png" HorizontalAlignment="Right"></Image>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Info-style textbox-->
        <Style x:Key="TextBoxFocusStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Height" Value="26"/>
            <Setter Property="ForceCursor" Value="False"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="微軟正黑體"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="3,0,3,0"/>
            <Setter Property="Margin" Value="2,0,2,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid >
                            <Border Background="{StaticResource TextBackColor}" BorderBrush="OrangeRed" x:Name="Bd" BorderThickness="1">
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Default styled textbox(dec)-->
        <Style x:Key="TextBoxDefaultDStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Height" Value="26"/>
            <Setter Property="ForceCursor" Value="False"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="微軟正黑體"/>
            <Setter Property="CharacterCasing" Value="Upper"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="3,0,3,0"/>
            <Setter Property="Margin" Value="2,0,2,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border Background="{StaticResource TextBackColor}" BorderBrush="{StaticResource BorderColor}" x:Name="Bd" BorderThickness="1">
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                        </Border>
                        <!--
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"  Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource TextBackColor}" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource BorderColor}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource TextBackColor}" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource NormalBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                        -->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <Style x:Key="RadioButtonItemStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="Background" Value="White" />
            <Setter Property="FontFamily" Value="微軟正黑體"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="FontStyle" Value="Oblique"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border x:Name="Border" BorderThickness="1,1,1,0" BorderBrush="Gray" CornerRadius="2,5,0,0" Margin="0,0,0,0">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Content" Margin="5,2,10,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"  Value="True">
                                <Setter TargetName="Border" Property="Background" Value="Wheat" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="GhostWhite" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonTempItemStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border>
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Content" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Height" Value="26"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderBrush" Value="#838383"/>
            <Setter Property="FontFamily" Value="微軟正黑體"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>

        
        
        <Style x:Key="CustomListBoxItem" TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border  Name="Border" SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="2" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"  />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="NavajoWhite" Offset="0.0"/>
                    <GradientStop Color="Beige" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="Border" CornerRadius="2"  Background="{StaticResource NormalBrush}"
                              BorderBrush="{StaticResource NormalBorderBrush}" >
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="DimGray"
                                Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" 
                                Opacity="{Binding Path=Opacity, RelativeSource={RelativeSource TemplatedParent}}"  />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ListBoxWithAutoScrollHorizontal" TargetType="{x:Type ListBox}" >
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource CustomListBoxItem}"/>
            <Setter Property="Template">
                <Setter.Value >
                    <ControlTemplate>
                        <Grid >
                            <ScrollViewer x:Name="scrollviewer">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}" >
                                        <Grid>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" 
                                                Value="{TemplateBinding HorizontalOffset}"
                                                Maximum="{TemplateBinding ScrollableWidth}"
                                                ViewportSize="{TemplateBinding ViewportWidth}"
                                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                Height="{Binding Height, ElementName=Panel}">
                                                <ScrollBar.Template>
                                                    <ControlTemplate>
                                                        <Track x:Name="PART_Track">
                                                            <Track.DecreaseRepeatButton>
                                                                <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarPageButton}"/>
                                                            </Track.DecreaseRepeatButton>
                                                            <Track.IncreaseRepeatButton>
                                                                <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarPageButton}"/>
                                                            </Track.IncreaseRepeatButton>
                                                            <Track.Thumb>
                                                                <Thumb Style="{StaticResource ScrollBarThumb}" Background="Gray" Opacity="0.5"/>
                                                            </Track.Thumb>
                                                        </Track>
                                                    </ControlTemplate>
                                                </ScrollBar.Template>
                                            </ScrollBar>
                                            <ScrollContentPresenter  Height="Auto" VerticalAlignment="Bottom"/>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter/>
                            </ScrollViewer>
                            <Grid x:Name="Panel" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <RepeatButton x:Name="LineLeftButton" Grid.Column="0" Width="15" Opacity="0" Visibility="Collapsed"
                                      Style="{StaticResource ScrollBarLineButton}"
                                      Content="M 6 0 L 6 16 L 0 8 Z"       
                                      Command="{x:Static ScrollBar.LineLeftCommand}"       
                                      CommandTarget="{Binding ElementName=scrollviewer}"
                                      ClickMode="Hover" />
                                <RepeatButton x:Name="LineRightButton" Grid.Column="2" Width="15" Opacity="0" Visibility="Collapsed"
                                      Style="{StaticResource ScrollBarLineButton}"
                                      Content="M 0 0 L 6 8 L 0 16 Z" 
                                      Command="{x:Static ScrollBar.LineRightCommand}"       
                                      CommandTarget="{Binding ElementName=scrollviewer}"
                                      ClickMode="Hover"/>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="ComputedHorizontalScrollBarVisibility" SourceName="scrollviewer" Value="Visible"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="LineLeftButton" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="LineRightButton" Property="Visibility" Value="Visible" />
                                </MultiTrigger.Setters>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="LineLeftButton" 
                                                Storyboard.TargetProperty="Opacity" To="0.8" Duration="0:0:0.05"/>
                                            <DoubleAnimation Storyboard.TargetName="LineRightButton" 
                                                Storyboard.TargetProperty="Opacity" To="0.8" Duration="0:0:0.05"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="LineLeftButton" 
                                                Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.05"/>
                                            <DoubleAnimation Storyboard.TargetName="LineRightButton" 
                                                Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.05"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value >
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ListBoxItem}" >
                        <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <RadioButton Tag="{Binding}" Style="{StaticResource RadioButtonTempItemStyle}" Content="{Binding}" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Background" Value="White" />
            <Setter Property="FontFamily" Value="微軟正黑體"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="FontStyle" Value="Oblique"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border x:Name="Border" BorderThickness="1,1,1,0" BorderBrush="Gray" CornerRadius="2,5,0,0" Margin="0,0,0,0">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="5,2,10,0"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="Wheat" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                                <Setter TargetName="Border" Property="Margin" Value="0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
        </Style>

        <Style TargetType="{x:Type TabControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border >
                                <TabPanel IsItemsHost="True" />
                            </Border>
                            <Border Grid.Row="1" BorderBrush="Gray" BorderThickness="1">
                                <ContentPresenter ContentSource="SelectedContent" Name="PART_SelectedContentHost"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="330" />
        </Grid.RowDefinitions>
        <Border Grid.Row="0" BorderBrush="#303030" BorderThickness="1,1,1,0" Background="#606060" MouseLeftButtonDown="OnEditCommandBorderMouseLeftDown">
            <Grid Margin="2">
                <TextBlock Style="{StaticResource TextBlockStyle14B}">Edit Send Sequence</TextBlock>
                <Button Content="{StaticResource IMG_Close}" Width="28" Height="28" Click="OnEditCommandDialogCloseClick" HorizontalAlignment="Right" VerticalContentAlignment="Center"/>
            </Grid>
        </Border>
        <Border Grid.Row="1" BorderBrush="#303030" BorderThickness="1,0,1,1" Background="#FAFAFA">
            <StackPanel Orientation="Vertical" VerticalAlignment="Top" HorizontalAlignment="Left">
                <StackPanel Orientation="Horizontal" Margin="5">
                    <Label Margin="2,0,0,0">Index</Label>
                    <TextBox x:Name="IndexForwardNext" Width="40" Height="24"  Margin="32,0,0,0" IsEnabled="False" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"></TextBox>
                    <Button VerticalContentAlignment="Center" Click="OnIndexForwardNextChecked1" Tag="1" x:Name="IndexForwardNext1" Content="{StaticResource IMG_Forward}" Width="26" Height="24"  Margin="2,0"></Button>
                    <Button VerticalContentAlignment="Center" Click="OnIndexForwardNextChecked2" Tag="2" x:Name="IndexForwardNext2" Content="{StaticResource IMG_Next}" Width="26" Height="24" Margin="1,0,0,0"></Button>
                </StackPanel>
                <GroupBox x:Name="EditCommandGroup" Height="250" Width="530" Margin="2,5,2,0" BorderBrush="LightSlateGray">
                    <GroupBox.Header>
                        <StackPanel Orientation="Horizontal">
                            <Label>Sequence Definition:</Label>
                            <RadioButton GroupName="EditCommandType" Checked="OnEditCommandTypeChecked" Tag="Standard" IsChecked="{Binding Path=EditCommandTypeIsChecked, Mode=TwoWay, Converter={StaticResource radioButtonConverterKey}, ConverterParameter=Standard}" FontStyle="Oblique" Margin="5,0,0,0" VerticalAlignment="Center">Standard</RadioButton>
                            <RadioButton GroupName="EditCommandType" Checked="OnEditCommandTypeChecked" Tag="Customize" IsChecked="{Binding Path=EditCommandTypeIsChecked, Mode=TwoWay, Converter={StaticResource radioButtonConverterKey}, ConverterParameter=Customize}" FontStyle="Oblique" Margin="5,0,0,0" VerticalAlignment="Center">Customize</RadioButton>
                        </StackPanel>
                    </GroupBox.Header>
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal">
                            <Label Width="70">Name</Label>
                            <TextBox Width="200" Height="24" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Margin="2,0,0,0"
                                Text="{Binding DefineName, UpdateSourceTrigger=PropertyChanged}">
                            </TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                            <Label Width="70">Sequence</Label>
                            <TextBox x:Name="DefineSequence" Width="446" Style="{StaticResource TextBoxDefaultDStyle}" HorizontalContentAlignment="Left" IsEnabled="{Binding DefineSequenceIsEnabled}"
                                PreviewKeyDown="TextBoxPreviewKeyDownValidationAll" KeyUp="TextBoxKeyUpValidationAll"
                                LostFocus="TextBoxLostFocusValidationAll" GotFocus="TextBoxGotFocusValidationAll"
                                Text="{Binding DefineSequence, UpdateSourceTrigger=PropertyChanged}">
                            </TextBox>
                        </StackPanel>
                        <StackPanel x:Name="EditCommandTab" Orientation="Vertical" Background="#FFF7F7F7" Margin="0,5,0,0" Height="150">
                            <TabControl Height="150" SelectedIndex="{Binding EditCommandTabControlItemSelectedIndex}" SelectionChanged="EditCommandTabControlItemSelectionChanged">
                                <TabItem Visibility="Collapsed" Header="">
                                    <StackPanel Orientation="Vertical" Height="142" Background="#FFF7F7F7">
                                    </StackPanel>
                                </TabItem>
                                <TabItem Header="{Binding EditCommandR, Source={StaticResource Resources}}">
                                    <StackPanel Orientation="Vertical" Height="130" Background="#FFF7F7F7">
                                        <Grid Margin="5,5,0,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="180"/>
                                                <ColumnDefinition Width="80"/>
                                                <ColumnDefinition Width="80"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition Height="26"/>
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Row="0" Grid.Column="0" Margin="2,0,0,0" Style="{StaticResource TextBlockStyle11}" Text="{Binding Group_ReadWrite_Bank, Source={StaticResource Resources}}"/>
                                            <TextBlock Grid.Row="0" Grid.Column="1" Margin="5,0,0,0" Style="{StaticResource TextBlockStyle11}" Text="{Binding Group_ReadWrite_Address, Source={StaticResource Resources}}"/>
                                            <TextBlock Grid.Row="0" Grid.Column="2" Margin="5,0,0,0" Style="{StaticResource TextBlockStyle11}" Text="{Binding Group_ReadWrite_Length, Source={StaticResource Resources}}"/>
                                            <ComboBox Grid.Row="1" Grid.Column="0" Width="178" Style="{StaticResource ComboBoxStyle}" 
                                                ItemsSource="{Binding MemBank}" SelectedItem="{Binding EditCommandTabReadMemBank}" SelectedIndex="{Binding EditCommandTabReadMemBankIndex}" DisplayMemberPath="Content"
                                                DropDownClosed="OnEditCommandTabReadMemBankDownClosed" />
                                            <TextBox x:Name="EditCommandTabReadAddress" input:InputMethod.IsInputMethodEnabled="True"
                                                Grid.Row="1" Grid.Column="1" Margin="5,0,0,0" Width="75" MaxLength="4" Style="{StaticResource TextBoxDefaultStyle}" 
                                                MouseMove="EditCommandTabReadAddressMouseMove" MouseLeave="EditCommandTabReadAddressMouseLeave"
                                                PreviewKeyDown="TextBoxPreviewKeyDownValidation" KeyUp="TextBoxKeyUpValidation"
                                                LostFocus="TextBoxLostFocusValidation" GotFocus="TextBoxGotFocusValidation"
                                                Text="{Binding EditCommandTabReadAddress, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Popup Name="EditCommandTabReadAddressPop" IsOpen="False" PlacementTarget="{Binding ElementName=EditCommandTabReadAddress}" 
                                                Placement="MousePoint" HorizontalOffset="10" VerticalOffset="5">
                                                <Border BorderBrush="DarkSalmon" BorderThickness="1" Background="OldLace">
                                                    <TextBlock Margin="5,5,10,5" Height="18" TextWrapping="Wrap">
                                                        <Span  FontStyle="Italic">Address Range: 0 ~ 3FFF</Span>
                                                    </TextBlock>
                                                </Border>
                                            </Popup>
                                            <TextBox x:Name="EditCommandTabReadLength" input:InputMethod.IsInputMethodEnabled="True"
                                                Grid.Row="1" Grid.Column="2" Margin="5,0,0,0" Width="75" MaxLength="2" Style="{StaticResource TextBoxDefaultStyle}" 
                                                MouseMove="EditCommandTabReadLengthMouseMove" MouseLeave="EditCommandTabReadLengthMouseLeave"
                                                PreviewKeyDown="TextBoxPreviewKeyDownValidation" KeyUp="TextBoxKeyUpValidation"
                                                LostFocus="TextBoxLostFocusValidation" GotFocus="TextBoxGotFocusValidation"
                                                Text="{Binding EditCommandTabReadLength, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Popup Name="EditCommandTabReadLengthPop" IsOpen="False" PlacementTarget="{Binding ElementName=EditCommandTabReadLength}" 
                                                Placement="MousePoint" HorizontalOffset="10" VerticalOffset="5">
                                                <Border BorderBrush="DarkSalmon" BorderThickness="1" Background="OldLace">
                                                    <TextBlock Margin="5,5,10,5" Height="18" TextWrapping="Wrap">
                                                        <Span FontStyle="Italic">Length Range: 1 ~ 20</Span>
                                                    </TextBlock>
                                                </Border>
                                            </Popup>
                                        </Grid>
                                    </StackPanel>
                                </TabItem>
                                <TabItem Header="{Binding EditCommandW, Source={StaticResource Resources}}">
                                    <StackPanel Orientation="Vertical" Height="130" Background="#FFF7F7F7">
                                        <Grid Margin="5,5,0,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="180"/>
                                                <ColumnDefinition Width="80"/>
                                                <ColumnDefinition Width="80"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition Height="26"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Row="0" Grid.Column="0" Margin="2,0,0,0" Style="{StaticResource TextBlockStyle11}" Text="{Binding Group_ReadWrite_Bank, Source={StaticResource Resources}}"/>
                                            <TextBlock Grid.Row="0" Grid.Column="1" Margin="5,0,0,0" Style="{StaticResource TextBlockStyle11}" Text="{Binding Group_ReadWrite_Address, Source={StaticResource Resources}}"/>
                                            <TextBlock Grid.Row="0" Grid.Column="2" Margin="5,0,0,0" Style="{StaticResource TextBlockStyle11}" Text="{Binding Group_ReadWrite_Length, Source={StaticResource Resources}}"/>
                                            <ComboBox Grid.Row="1" Grid.Column="0" Width="178" Style="{StaticResource ComboBoxStyle}" 
                                                ItemsSource="{Binding MemBank}" SelectedItem="{Binding EditCommandTabWriteMemBank}" SelectedIndex="{Binding EditCommandTabWriteMemBankIndex}" DisplayMemberPath="Content"
                                                DropDownClosed="OnEditCommandTabWriteMemBankDownClosed" />
                                            <TextBox x:Name="EditCommandTabWriteAddress" input:InputMethod.IsInputMethodEnabled="True"
                                                Grid.Row="1" Grid.Column="1" Margin="5,0,0,0" Width="75" MaxLength="4" Style="{StaticResource TextBoxDefaultStyle}" 
                                                MouseMove="EditCommandTabWriteAddressMouseMove" MouseLeave="EditCommandTabWriteAddressMouseLeave"
                                                PreviewKeyDown="TextBoxPreviewKeyDownValidation" KeyUp="TextBoxKeyUpValidation"
                                                LostFocus="TextBoxLostFocusValidation" GotFocus="TextBoxGotFocusValidation"
                                                Text="{Binding EditCommandTabWriteAddress, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Popup Name="EditCommandTabWriteAddressPop" IsOpen="False" PlacementTarget="{Binding ElementName=EditCommandTabWriteAddress}" 
                                                Placement="MousePoint" HorizontalOffset="10" VerticalOffset="5">
                                                <Border BorderBrush="DarkSalmon" BorderThickness="1" Background="OldLace">
                                                    <TextBlock Margin="5,5,10,5" Height="18" TextWrapping="Wrap">
                                                        <Span FontStyle="Italic">Address Range: 0 ~ 3FFF</Span>
                                                    </TextBlock>
                                                </Border>
                                            </Popup>
                                            <TextBox x:Name="EditCommandTabWriteLength" input:InputMethod.IsInputMethodEnabled="True"
                                                Grid.Row="1" Grid.Column="2" Margin="5,0,0,0" Width="75" MaxLength="2" Style="{StaticResource TextBoxDefaultStyle}" 
                                                MouseMove="EditCommandTabWriteLengthMouseMove" MouseLeave="EditCommandTabWriteLengthMouseLeave"
                                                PreviewKeyDown="TextBoxPreviewKeyDownValidation" KeyUp="TextBoxKeyUpValidation"
                                                LostFocus="TextBoxLostFocusValidation" GotFocus="TextBoxGotFocusValidation"
                                                Text="{Binding EditCommandTabWriteLength, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Popup Name="EditCommandTabWriteLengthPop" IsOpen="False" PlacementTarget="{Binding ElementName=EditCommandTabWriteLength}" 
                                                Placement="MousePoint" HorizontalOffset="10" VerticalOffset="5">
                                                <Border BorderBrush="DarkSalmon" BorderThickness="1" Background="OldLace">
                                                    <TextBlock Margin="5,5,10,5" Height="18" TextWrapping="Wrap">
                                                        <Span FontStyle="Italic">Length Range: 1 ~ 20</Span>
                                                    </TextBlock>
                                                </Border>
                                            </Popup>
                                            <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Horizontal">
                                                <TextBlock Margin="2,8,0,0" Style="{StaticResource TextBlockStyle11}" Text="{Binding Group_ReadWrite_Data, Source={StaticResource Resources}}"/>
                                                <TextBlock Margin="8,8,0,0" Style="{StaticResource TextBlockStyle11}" Text="{Binding EditCommandTabWriteDataIdx, UpdateSourceTrigger=PropertyChanged}"/>
                                            </StackPanel>
                                            
                                        </Grid>
                                        <TextBox x:Name="EditCommandTabWriteData" input:InputMethod.IsInputMethodEnabled="True"
					                        Width="500" Margin="7,2" Style="{StaticResource TextBoxDefaultStyle}"
					                        PreviewKeyDown="TextBoxPreviewKeyDownValidation" KeyUp="TextBoxKeyUpValidation"
                                            LostFocus="TextBoxLostFocusValidation" GotFocus="TextBoxGotFocusValidation"
					                        Text="{Binding EditCommandTabWriteData, UpdateSourceTrigger=PropertyChanged}"/>
                                    </StackPanel>
                                </TabItem>
                                <TabItem Header="{Binding EditCommandP, Source={StaticResource Resources}}">
                                    <StackPanel Orientation="Vertical" Height="130" Background="#FFF7F7F7">
                                        <TextBlock 
                                            Margin="5,5,0,0" Style="{StaticResource TextBlockStyle11}" TextWrapping="Wrap" 
                                            Text="{Binding Group_PreSet_AccessPassword, Source={StaticResource Resources}}"/>
                                        <TextBox x:Name="EditCommandTabAccessPassword" input:InputMethod.IsInputMethodEnabled="True"
                                            Margin="5,0" Width="140" MaxLength="8" Style="{StaticResource TextBoxDefaultStyle}" HorizontalAlignment="Left"
                                            MouseMove="EditCommandTabAccessPasswordMouseMove" MouseLeave="EditCommandTabAccessPasswordMouseLeave"
				                            PreviewKeyDown="TextBoxPreviewKeyDownValidation" KeyUp="TextBoxKeyUpValidation"
                                            LostFocus="TextBoxLostFocusValidation" GotFocus="TextBoxGotFocusValidation"
				                            Text="{Binding EditCommandTabAccessPassword, UpdateSourceTrigger=PropertyChanged}"/>
                                        <Popup Name="EditCommandTabAccessPasswordPop"  IsOpen="False" PlacementTarget="{Binding ElementName=EditCommandTabAccessPassword}" 
                                            Placement="MousePoint" HorizontalOffset="10" VerticalOffset="5">
                                            <Border BorderBrush="DarkSalmon" BorderThickness="1" Background="OldLace">
                                                <TextBlock Margin="5,5,10,5" Height="18" TextWrapping="Wrap">
                                                    <Span FontStyle="Italic">Access Password Range : 00000000 ~ FFFFFFFF</Span>
                                                </TextBlock>
                                            </Border>
                                        </Popup>
                                    </StackPanel>
                                </TabItem>
                                <TabItem Header="{Binding EditCommandT, Source={StaticResource Resources}}">
                                    <StackPanel Orientation="Vertical" Height="130" Background="#FFF7F7F7">
                                        <Grid Margin="5,5,0,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="180"></ColumnDefinition>
                                                <ColumnDefinition Width="80"></ColumnDefinition>
                                                <ColumnDefinition Width="80"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition Height="26"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Row="0" Grid.Column="0" Margin="2,0,0,0" Style="{StaticResource TextBlockStyle11}" Text="{Binding Group_PreSet_Select_Bank, Source={StaticResource Resources}}"/>
                                            <TextBlock Grid.Row="0" Grid.Column="1" Margin="2,0,0,0" Style="{StaticResource TextBlockStyle11}" Text="{Binding Group_PreSet_Select_Address, Source={StaticResource Resources}}"/>
                                            <TextBlock Grid.Row="0" Grid.Column="2" Margin="2,0,0,0" Style="{StaticResource TextBlockStyle11}" Text="{Binding Group_PreSet_Select_Length, Source={StaticResource Resources}}"/>
                                            <ComboBox Grid.Row="1" Grid.Column="0" Width="178" Style="{StaticResource ComboBoxStyle}" 
						                        ItemsSource="{Binding MemBank}" SelectedItem="{Binding EditCommandTabSelectMemBank}" SelectedIndex="{Binding EditCommandTabSelectMemBankIndex}" DisplayMemberPath="Content"
                                                DropDownClosed="OnEditCommandTabSelectMemBankDownClosed"/>
                                            <TextBox x:Name="EditCommandTabSelectAddress" input:InputMethod.IsInputMethodEnabled="True"
					                            Grid.Row="1" Grid.Column="1" Margin="5,0,0,0" Width="75" MaxLength="4" Style="{StaticResource TextBoxDefaultStyle}"
					                            MouseMove="EditCommandTabSelectAddressMouseMove" MouseLeave="EditCommandTabSelectAddressMouseLeave"
                                                PreviewKeyDown="TextBoxPreviewKeyDownValidation" KeyUp="TextBoxKeyUpValidation"
                                                LostFocus="TextBoxLostFocusValidation" GotFocus="TextBoxGotFocusValidation"
					                            Text="{Binding EditCommandTabSelectAddress, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Popup Name="EditCommandTabSelectAddressPop" IsOpen="False" PlacementTarget="{Binding ElementName=EditCommandTabSelectAddress}" 
                                                Placement="MousePoint" HorizontalOffset="10" VerticalOffset="5">
                                                <Border BorderBrush="DarkSalmon" BorderThickness="1" Background="OldLace">
                                                    <TextBlock Margin="5,5,10,5" Height="18" TextWrapping="Wrap">
                                                        <Span FontStyle="Italic">Bit Address Range: 0 ~ 3FFF</Span>
                                                    </TextBlock>
                                                </Border>
                                            </Popup>
                                            <TextBox x:Name="EditCommandTabSelectLength" input:InputMethod.IsInputMethodEnabled="True"
					                            Grid.Row="1" Grid.Column="2" Margin="5,0,0,0" Width="75" MaxLength="2" Style="{StaticResource TextBoxDefaultStyle}"
					                            MouseMove="EditCommandTabSelectLengthMouseMove" MouseLeave="EditCommandTabSelectLengthMouseLeave"
                                                PreviewKeyDown="TextBoxPreviewKeyDownValidation" KeyUp="TextBoxKeyUpValidation"
                                                LostFocus="TextBoxLostFocusValidation" GotFocus="TextBoxGotFocusValidation"
					                            Text="{Binding EditCommandTabSelectLength, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Popup Name="EditCommandTabSelectLengthPop" IsOpen="False" PlacementTarget="{Binding ElementName=EditCommandTabSelectLength}" 
                                                Placement="MousePoint" HorizontalOffset="10" VerticalOffset="5">
                                                <Border BorderBrush="DarkSalmon" BorderThickness="1" Background="OldLace">
                                                    <TextBlock Margin="5,5,10,5" Height="18" TextWrapping="Wrap">
                                                        <Span FontStyle="Italic">Bit Length Range: 1 ~ 60</Span>
                                                    </TextBlock>
                                                </Border>
                                            </Popup>
                                            <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Horizontal">
                                                <TextBlock Margin="2,8,0,0" Style="{StaticResource TextBlockStyle11}" Text="{Binding Group_ReadWrite_Data, Source={StaticResource Resources}}"/>
                                                <TextBlock Margin="8,8,0,0" Style="{StaticResource TextBlockStyle11}" Text="{Binding EditCommandTabSelectDataIdx, UpdateSourceTrigger=PropertyChanged}"/>
                                            </StackPanel>
                                        </Grid>
                                        <TextBox x:Name="EditCommandTabSelectData" input:InputMethod.IsInputMethodEnabled="True"
                                            Width="500" Margin="7,2" Style="{StaticResource TextBoxDefaultStyle}"
                                            PreviewKeyDown="TextBoxPreviewKeyDownValidation" KeyUp="TextBoxKeyUpValidation"
                                            LostFocus="TextBoxLostFocusValidation" GotFocus="TextBoxGotFocusValidation"   
					                        Text="{Binding EditCommandTabSelectData, UpdateSourceTrigger=PropertyChanged}"/>
                                    </StackPanel>
                                </TabItem>
                                <TabItem Header="{Binding EditCommandL, Source={StaticResource Resources}}">
                                    <StackPanel Orientation="Vertical" Height="130" Background="#FFF7F7F7">
                                        <Grid Margin="5,5,0,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="168"/>
                                                <ColumnDefinition Width="168"/>
                                                <ColumnDefinition Width="168"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition Height="26"/>
                                                <RowDefinition/>
                                                <RowDefinition Height="26"/>
                                                <RowDefinition Height="28"/>
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Row="0" Grid.Column="0" Margin="4,0,0,0" Style="{StaticResource TextBlockStyle11}" Text="{Binding Group_Lock_Field_KillPwd, Source={StaticResource Resources}}"/>
                                            <TextBlock Grid.Row="0" Grid.Column="1" Margin="4,0,0,0" Style="{StaticResource TextBlockStyle11}" Text="{Binding Group_Lock_Field_AccessPwd, Source={StaticResource Resources}}"/>
                                            <TextBlock Grid.Row="2" Grid.Column="0" Margin="4,0,0,0" Style="{StaticResource TextBlockStyle11}" Text="{Binding Group_Lock_Field_EPC, Source={StaticResource Resources}}"/>
                                            <TextBlock Grid.Row="2" Grid.Column="1" Margin="4,0,0,0" Style="{StaticResource TextBlockStyle11}" Text="{Binding Group_Lock_Field_TID, Source={StaticResource Resources}}"/>
                                            <TextBlock Grid.Row="2" Grid.Column="2" Margin="4,0,0,0" Style="{StaticResource TextBlockStyle11}" Text="{Binding Group_Lock_Field_USER, Source={StaticResource Resources}}"/>

                                            <ComboBox Grid.Row="1" Grid.Column="0" x:Name="EditCommandLockKillPwd" Margin="2,0,0,0" Width="166" Style="{StaticResource ComboBoxStyle}" 
                                                DropDownClosed="OnEditCommandLockComboBoxDownClosed">
                                                <ComboBoxItem Content="   -- skip --" Tag="0" IsSelected="True"/>
                                                <ComboBoxItem Content="{Binding Lock_00Description, Source={StaticResource Resources}}" Tag="1" />
                                                <ComboBoxItem Content="{Binding Lock_01Description, Source={StaticResource Resources}}" Tag="2"/>
                                                <ComboBoxItem Content="{Binding Lock_10Description, Source={StaticResource Resources}}" Tag="3"/>
                                                <ComboBoxItem Content="{Binding Lock_11Description, Source={StaticResource Resources}}" Tag="4"/>
                                            </ComboBox>
                                            <ComboBox Grid.Row="1" Grid.Column="1" x:Name="EditCommandLockAccessPwd" Margin="2,0,0,0" Width="166" Style="{StaticResource ComboBoxStyle}" 
                                                DropDownClosed="OnEditCommandLockComboBoxDownClosed">
                                                <ComboBoxItem Content="   -- skip --" Tag="0" IsSelected="True"/>
                                                <ComboBoxItem Content="{Binding Lock_00Description, Source={StaticResource Resources}}" Tag="1"/>
                                                <ComboBoxItem Content="{Binding Lock_01Description, Source={StaticResource Resources}}" Tag="2"/>
                                                <ComboBoxItem Content="{Binding Lock_10Description, Source={StaticResource Resources}}" Tag="3"/>
                                                <ComboBoxItem Content="{Binding Lock_11Description, Source={StaticResource Resources}}" Tag="4"/>
                                            </ComboBox>
                                            <ComboBox Grid.Row="3" Grid.Column="0" x:Name="EditCommandLockEPC" Margin="2,0,0,0" Width="166" Style="{StaticResource ComboBoxStyle}" 
                                                DropDownClosed="OnEditCommandLockComboBoxDownClosed">
                                                <ComboBoxItem Content="   -- skip --" Tag="0" IsSelected="True"/>
                                                <ComboBoxItem Content="{Binding Lock_00Description_, Source={StaticResource Resources}}" Tag="1"/>
                                                <ComboBoxItem Content="{Binding Lock_01Description_, Source={StaticResource Resources}}" Tag="2"/>
                                                <ComboBoxItem Content="{Binding Lock_10Description_, Source={StaticResource Resources}}" Tag="3"/>
                                                <ComboBoxItem Content="{Binding Lock_11Description_, Source={StaticResource Resources}}" Tag="4"/>
                                            </ComboBox>
                                            <ComboBox Grid.Row="3" Grid.Column="1" x:Name="EditCommandLockTID" Margin="2,0,0,0" Width="166" Style="{StaticResource ComboBoxStyle}" 
                                                DropDownClosed="OnEditCommandLockComboBoxDownClosed">
                                                <ComboBoxItem Content="   -- skip --" Tag="0" IsSelected="True"/>
                                                <ComboBoxItem Content="{Binding Lock_00Description_, Source={StaticResource Resources}}" Tag="1"/>
                                                <ComboBoxItem Content="{Binding Lock_01Description_, Source={StaticResource Resources}}" Tag="2"/>
                                                <ComboBoxItem Content="{Binding Lock_10Description_, Source={StaticResource Resources}}" Tag="3"/>
                                                <ComboBoxItem Content="{Binding Lock_11Description_, Source={StaticResource Resources}}" Tag="4"/>
                                            </ComboBox>
                                            <ComboBox Grid.Row="3" Grid.Column="2" x:Name="EditCommandLockUser" Margin="2,0,0,0" Width="166" Style="{StaticResource ComboBoxStyle}" 
                                                DropDownClosed="OnEditCommandLockComboBoxDownClosed">
                                                <ComboBoxItem Content="   -- skip --" Tag="0" IsSelected="True"/>
                                                <ComboBoxItem Content="{Binding Lock_00Description_, Source={StaticResource Resources}}" Tag="1"/>
                                                <ComboBoxItem Content="{Binding Lock_01Description_, Source={StaticResource Resources}}" Tag="2"/>
                                                <ComboBoxItem Content="{Binding Lock_10Description_, Source={StaticResource Resources}}" Tag="3"/>
                                                <ComboBoxItem Content="{Binding Lock_11Description_, Source={StaticResource Resources}}" Tag="4"/>
                                            </ComboBox>
                                            <TextBox Grid.Row="4" Grid.Column="0" Margin="2,2,0,0" Width="96" MaxLength="3" Style="{StaticResource TextBoxDefaultStyle}"
					                            input:InputMethod.IsInputMethodEnabled="True" Visibility="Hidden" x:Name="EditCommandTabLockMask"
					                            PreviewKeyDown="TextBoxPreviewKeyDownValidation" KeyUp="TextBoxKeyUpValidation" 
                                                LostFocus="TextBoxLostFocusValidation" GotFocus="TextBoxGotFocusValidation"
					                            Text="{Binding EditCommandTabLockMask, UpdateSourceTrigger=PropertyChanged}"/>
                                            <TextBox Grid.Row="4" Grid.Column="1" Margin="3,2,0,0" Width="96" MaxLength="3" Style="{StaticResource TextBoxDefaultStyle}"
					                            input:InputMethod.IsInputMethodEnabled="True" Visibility="Hidden" x:Name="EditCommandTabLockAction"
					                            PreviewKeyDown="TextBoxPreviewKeyDownValidation" KeyUp="TextBoxKeyUpValidation" 
                                                LostFocus="TextBoxLostFocusValidation" GotFocus="TextBoxGotFocusValidation"
					                            Text="{Binding EditCommandTabLockAction, UpdateSourceTrigger=PropertyChanged}"/>
                                        </Grid>
                                    </StackPanel>
                                </TabItem>
                                <TabItem Header="{Binding EditCommandUQR, Source={StaticResource Resources}}">
                                    <StackPanel Orientation="Vertical" Height="130" Background="#FFF7F7F7">
                                        <StackPanel Orientation="Horizontal" Margin="10,5,0,0">
                                            <RadioButton GroupName="EditCommandTabUQR" Checked="OnEditCommandTabUQRChecked" Tag="U" IsChecked="{Binding Path=EditCommandTabUQRIsChecked, Mode=TwoWay, Converter={StaticResource radioButtonConverterKey}, ConverterParameter=U}">U</RadioButton>
                                            <RadioButton GroupName="EditCommandTabUQR" Checked="OnEditCommandTabUQRChecked" Tag="Q" IsChecked="{Binding Path=EditCommandTabUQRIsChecked, Mode=TwoWay, Converter={StaticResource radioButtonConverterKey}, ConverterParameter=Q}" Margin="20,0,0,0">Q</RadioButton>
                                        </StackPanel>
                                        <Grid Margin="5,10,0,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="180"/>
                                                <ColumnDefinition Width="80"/>
                                                <ColumnDefinition Width="80"/>
                                                <ColumnDefinition Width="80"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition Height="26"/>
                                                <RowDefinition/>
                                                <RowDefinition Height="26"/>
                                            </Grid.RowDefinitions>
                                            <StackPanel Grid.Row="0" Grid.Column="0" Margin="2,0,0,0" Orientation="Horizontal" Visibility="{Binding EditCommandTabUQRSlotTitlexVisibility, UpdateSourceTrigger=PropertyChanged}">
                                                <CheckBox IsChecked="{Binding EditCommandTabUQRSlotQIsCheck}"  Checked="OnEditCommandTabUQRSlotQChecked" Unchecked="OnEditCommandTabUQRSlotQUnChecked"></CheckBox>
                                                <TextBlock Style="{StaticResource TextBlockStyle11}" Text="{Binding Group_U_SlotQ, Source={StaticResource Resources}}" />
                                            </StackPanel>
                                            <ComboBox Grid.Row="1" Grid.Column="0" Width="75" Margin="2,0,0,0" x:Name="EditCommandTabUQRSlotComboBox" Visibility="{Binding EditCommandTabUQRSlotComboBoxVisibility, UpdateSourceTrigger=PropertyChanged}"
                                                Style="{StaticResource ComboBoxStyle}" HorizontalAlignment="Left" 
                                                ItemsSource="{Binding SlotQ}" SelectedItem="{Binding EditCommandTabUQRSlotQComboBox}" DisplayMemberPath="Content"/>
                                            <StackPanel Grid.Row="2" Grid.Column="0" Margin="2,5,0,0" Orientation="Horizontal">
                                                <CheckBox IsChecked="{Binding EditCommandTabUQRReadIsCheck}"  Checked="OnEditCommandTabUQRReadChecked" Unchecked="OnEditCommandTabUQRReadUnChecked"></CheckBox>
                                                <TextBlock Style="{StaticResource TextBlockStyle11}" Text="{Binding Group_ReadWrite_Bank, Source={StaticResource Resources}}"/>
                                            </StackPanel>
                                            <TextBlock Grid.Row="2" Grid.Column="1" Margin="5,0,0,0" Style="{StaticResource TextBlockStyle11}" Text="{Binding Group_ReadWrite_Address, Source={StaticResource Resources}}"/>
                                            <TextBlock Grid.Row="2" Grid.Column="2" Margin="5,0,0,0" Style="{StaticResource TextBlockStyle11}" Text="{Binding Group_ReadWrite_Length, Source={StaticResource Resources}}"/>
                                            <ComboBox Grid.Row="3" Grid.Column="0" Width="178" Style="{StaticResource ComboBoxStyle}" 
                                                ItemsSource="{Binding MemBank}" SelectedItem="{Binding EditCommandTabUQRMemBank}" SelectedIndex="{Binding EditCommandTabUQRMemBankIndex}"  DisplayMemberPath="Content"
                                                DropDownClosed="OnEditCommandTabUQRMemBankDownClosed" />
                                            <TextBox Grid.Row="3" Grid.Column="1" Width="75" Margin="5,0,0,0" x:Name="EditCommandTabUQRAddress" input:InputMethod.IsInputMethodEnabled="True"
                                                MaxLength="4" Style="{StaticResource TextBoxDefaultStyle}" 
                                                PreviewKeyDown="TextBoxPreviewKeyDownValidation" KeyUp="TextBoxKeyUpValidation"
                                                LostFocus="TextBoxLostFocusValidation" GotFocus="TextBoxGotFocusValidation"
                                                Text="{Binding EditCommandTabUQRAddress, UpdateSourceTrigger=PropertyChanged}"/>
                                            <TextBox Grid.Row="3" Grid.Column="2" Width="75" Margin="5,0,0,0" x:Name="EditCommandTabUQRLength" input:InputMethod.IsInputMethodEnabled="True"
                                                MaxLength="2" Style="{StaticResource TextBoxDefaultStyle}" 
                                                PreviewKeyDown="TextBoxPreviewKeyDownValidation" KeyUp="TextBoxKeyUpValidation"
                                                LostFocus="TextBoxLostFocusValidation" GotFocus="TextBoxGotFocusValidation"
                                                Text="{Binding EditCommandTabUQRLength, UpdateSourceTrigger=PropertyChanged}"/>
                                            
                                        </Grid>
                                    </StackPanel>
                                </TabItem>
                            </TabControl>
                        </StackPanel>
                        
                    </StackPanel>
                </GroupBox>
                <StackPanel Orientation="Horizontal" Height="28" Margin="4,6,0,0">
                    <Button Width="120" x:Name="DeleteSequenceBtn" Style="{StaticResource ButtonStyle12B}" Click="OnDeleteSequenceClick">Delete Sequence</Button>
                    <Button Width="80" x:Name="OKSequenceBtn" Style="{StaticResource ButtonStyle12B}" Click="OnCommandOkClick" Margin="156,0,5,0">Ok</Button>
                    <Button Width="80" x:Name="ApplySequenceBtn" Style="{StaticResource ButtonStyle12B}" Click="OnCommandApplyClick" Margin="0,0,5,0">Apply</Button>
                    <Button Width="80" Style="{StaticResource ButtonStyle12B}" Click="OnSendSequenceCancelClick">Cancel</Button>
                </StackPanel>
            </StackPanel>
        </Border>
    </Grid>
</Window>
